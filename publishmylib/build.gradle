apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.source
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

//    because:
//    if (JavaVersion.current().isJava8Compatible()) {
//        options.addStringOption('Xdoclint:none', '-quiet')
//    }
//    was throwing: javadoc: error - Illegal package name
tasks.withType(Javadoc).all {
    enabled = false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.marandaneto'
                artifactId = 'publish-mylib'
                version = '1.0'

                artifact androidSourcesJar
                artifact androidJavadocsJar

                pom {
                    name = 'com.marandaneto:publish-mylib'
                    description = 'my lib'
                    url = 'www.marandaneto.com'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'marandaneto'
                            name = 'Manoel Neto'
                            email = 'me@marandaneto.com' // its fake :)
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/marandaneto/publishit.git'
                        developerConnection = 'scm:git:ssh://github.com/marandaneto/publishit.git'
                        url = 'www.github.com/marandaneto/publishit'
                    }
                }

                from components.release
                androidSourcesJar
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = "$buildDir/repos/releases"
                def snapshotsRepoUrl = "$buildDir/repos/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}
